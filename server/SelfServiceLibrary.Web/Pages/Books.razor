@page "/books"
@using SelfServiceLibrary.Service.Services
@using SelfServiceLibrary.Service.DTO.Book
@using System.IO
@inject BookService Service

<Bar Breakpoint="Breakpoint.Desktop"
     Background="Background.Light"
     ThemeContrast="ThemeContrast.Light">
    <BarBrand>
        Books
    </BarBrand>
    <BarToggler />
    <BarMenu>
        <BarStart>
            <BarItem>
                <Inline>
                    <Field>
                        <Button Color="Color.Danger" Clicked="@DeleteAll">Delete all !</Button>
                    </Field>
                    <Field Margin="Margin.Is3.OnX.OnTablet">
                        <Label>Import CSV</Label>
                    </Field>
                    <Field>
                        <InputFile OnChange="@OnInputFileChange" accept=".csv, .txt" single>Import CSV</InputFile>
                    </Field>
                </Inline>
            </BarItem>
        </BarStart>
    </BarMenu>
</Bar>

<DataGrid Margin="Margin.Is4.OnX"
          TItem="BookListDTO"
          Data="@books"
          ReadData="@OnReadData"
          TotalItems="@totalBooks"
          ShowPager="true"
          PagerPosition="DataGridPagerPosition.Bottom"
          PageSize="15">
    <DataGridColumn TItem="BookListDTO" Field="@nameof(BookListDTO.DepartmentNumber)" Caption="#" Sortable="false" />
    <DataGridColumn TItem="BookListDTO" Field="@nameof(BookListDTO.Name)" Caption="Book Name" Sortable="true" />
    <DataGridColumn TItem="BookListDTO" Field="@nameof(BookListDTO.Author)" Caption="Author" Sortable="true" />
</DataGrid>

@code {
    private List<BookListDTO> books;
    private int? totalBooks;

    protected override async Task OnInitializedAsync()
    {
        totalBooks = (int)await Service.GetTotalCount();
    }

    private async Task DeleteAll()
    {
        await Service.DeleteAll();
        totalBooks = 0;
        books.Clear();
        StateHasChanged();
    }

    private async Task OnReadData(DataGridReadDataEventArgs<BookListDTO> e)
    {
        books = await Service.GetAll(e.Page, e.PageSize);
        StateHasChanged();
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        // 5 Megabytes = 5242880 Bytes
        await Service.ImportCsv(e.File.OpenReadStream(5242880));

        totalBooks = (int)await Service.GetTotalCount();
        books = await Service.GetAll(1, 15);
        StateHasChanged();
    }
}
