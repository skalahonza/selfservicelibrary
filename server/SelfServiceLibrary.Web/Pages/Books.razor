@page "/books"
@using SelfServiceLibrary.Service.Services
@using SelfServiceLibrary.Service.DTO.Book
@using System.IO
@inject BookService Service

<h1>Books</h1>

<Inline>
    <Field >
        <FileEdit Changed="@OnChanged" Multiple="false" Filter=".csv, .txt" >Import CSV</FileEdit>
    </Field>
    <Field>
        <Button Color="Color.Danger" Clicked="@DeleteAll">Delete all !</Button>
    </Field>
</Inline>

<DataGrid TItem="BookListDTO"
          Data="@books"
          ReadData="@OnReadData"
          TotalItems="@totalBooks"
          ShowPager="true"
          PageSize="15">
    <DataGridColumn TItem="BookListDTO" Field="@nameof(BookListDTO.DepartmentNumber)" Caption="#" Sortable="false" />
    <DataGridColumn TItem="BookListDTO" Field="@nameof(BookListDTO.Name)" Caption="Book Name" Sortable="true" />
    <DataGridColumn TItem="BookListDTO" Field="@nameof(BookListDTO.Author)" Caption="Author" Sortable="true" />
</DataGrid>

@code {
    private List<BookListDTO> books;
    private int? totalBooks;

    protected override async Task OnInitializedAsync()
    {
        totalBooks = (int)await Service.GetTotalCount();
    }

    private async Task DeleteAll()
    {
        await Service.DeleteAll();
        totalBooks = 0;
        books.Clear();
        StateHasChanged();
    }

    private async Task OnReadData(DataGridReadDataEventArgs<BookListDTO> e)
    {
        books = await Service.GetAll(e.Page, e.PageSize);
        StateHasChanged();
    }

    private async Task OnChanged(FileChangedEventArgs e)
    {
        var file = e.Files.Single();
        // A stream is going to be the destination stream we're writing to.
        using var stream = new MemoryStream();
        // Here we're telling the FileEdit where to write the upload result
        await file.WriteToStreamAsync(stream);
        // Once we reach this line it means the file is fully uploaded.
        // In this case we're going to offset to the beginning of file
        // so we can read it.
        stream.Seek(0, SeekOrigin.Begin);
        await Service.ImportCsv(stream);

        totalBooks = (int)await Service.GetTotalCount();
        books = await Service.GetAll(1, 15);
        StateHasChanged();
    }
}
