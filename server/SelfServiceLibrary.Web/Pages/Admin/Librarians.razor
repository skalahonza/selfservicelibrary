@page "/librarians"
@attribute [Authorize(Policy = AdminPolicy.NAME)]
@using SelfServiceLibrary.DAL.Enums
@using SelfServiceLibrary.Web.Policies
@using SelfServiceLibrary.BL.Interfaces
@using SelfServiceLibrary.BL.DTO.User
@inject IUserService service

<Container Fluid="true">
    <DataGrid TItem="UserListDTO"
              Data="@librarians"
              RowSelectable=@(_ => false)
              Editable="true"
              SortMode="DataGridSortMode.Multiple"
              EditMode="DataGridEditMode.Inline"
              RowInserted="@OnRowInserted"
              RowRemoved="@OnRowRemoved">
        <DataGridCommandColumn TItem="UserListDTO" Width="170px">
            <NewCommandTemplate>
                <Button Color="Color.Success" Clicked="@context.Clicked">Add</Button>
            </NewCommandTemplate>
            <EditCommandTemplate>
            </EditCommandTemplate>
            <SaveCommandTemplate>
                <Button Color="Color.Primary" Clicked="@context.Clicked">Save</Button>
            </SaveCommandTemplate>
            <DeleteCommandTemplate>
                <Dropdown>
                    <DropdownToggle Color="Color.Danger" ToggleIconVisible="false">
                        Delete
                    </DropdownToggle>
                    <DropdownMenu>
                        <DropdownItem Clicked="@context.Clicked">Yes, I am sure</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
            </DeleteCommandTemplate>
            <CancelCommandTemplate>
                <Button Color="Color.Secondary" Clicked="@context.Clicked">Cancel</Button>
            </CancelCommandTemplate>
        </DataGridCommandColumn>
        <DataGridColumn TItem="UserListDTO" Field="@nameof(UserListDTO.Username)" Caption="Username" Editable="true" CellsEditableOnEditCommand="false" CellsEditableOnNewCommand="true" />
    </DataGrid>
</Container>

<SnackbarStack @ref="snackbarStack" Location="SnackbarStackLocation.Right" />

@code {
    SnackbarStack snackbarStack = new SnackbarStack();
    private List<UserListDTO> librarians = new List<UserListDTO>();

    [CascadingParameter]
    protected MainLayout Main { get; set; } = new MainLayout();

    protected override async Task OnInitializedAsync()
    {
        librarians = await service.GetAll(Role.Librarian);
        Main?.ChangeTitle("Librarians");
    }

    private async Task OnRowInserted(SavedRowItem<UserListDTO, Dictionary<string, object>> e)
    {
        if (!string.IsNullOrEmpty(e.Item.Username))
        {
            var added = await service.AddRole(e.Item.Username, Role.Librarian);
            if (!added)
            {
                await snackbarStack.PushAsync("Such user is already a librarian.", SnackbarColor.Danger);
                librarians = await service.GetAll(Role.Librarian);
            }
        }
    }

    private Task OnRowRemoved(UserListDTO item)
    {
        if (!string.IsNullOrEmpty(item.Username))
            return service.RemoveRole(item.Username, Role.Librarian);
        else
            return Task.CompletedTask;
    }
}
