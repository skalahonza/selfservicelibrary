@page "/my-issues"
@attribute [Authorize]

@using SelfServiceLibrary.BL.Interfaces
@using SelfServiceLibrary.BL.DTO.Issue
@using Microsoft.AspNetCore.Components.Authorization
@inject IIssueService issueService
@inject AuthenticationStateProvider AuthenticationStateProvider

<Container Fluid="true">
    <DataGrid RowSelectable=@(_ => false)
              TItem="IssueListlDTO"
              Data="@issues"
              ShowPager="true"
              PagerPosition="DataGridPagerPosition.Bottom"
              ShowPageSizes="true">
        <DataGridColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.DepartmentNumber)" Caption="Ident" Sortable="false">
            <DisplayTemplate>
                <a href="@($"books/{context.DepartmentNumber}")">@context.DepartmentNumber</a>
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.BookName)" Caption="Name" Sortable="true" Filterable="true" />
        <DataGridDateColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.IssueDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Issue date" Sortable="true" />
        <DataGridDateColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.ExpiryDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Expiry date" Sortable="true" />
        <DataGridDateColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.ReturnDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Return date" Sortable="true" />
        <DataGridCheckColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.IsReturned)" Caption="Reutrned" Sortable="true" Filterable="true">
            <DisplayTemplate>
                <Check TValue="bool" Checked="context.IsReturned" Disabled="true" ReadOnly="true" />
            </DisplayTemplate>
        </DataGridCheckColumn>
    </DataGrid>
</Container>

@code {
    private List<IssueListlDTO> issues = new List<IssueListlDTO>();

    [CascadingParameter]
    protected MainLayout? Main { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        issues = await issueService.GetAll(state.User.Identity!.Name!);
        Main?.ChangeTitle("My issues");
    }
}
