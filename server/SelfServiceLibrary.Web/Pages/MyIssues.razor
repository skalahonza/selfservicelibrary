@page "/my-issues"
@attribute [Authorize]

@using SelfServiceLibrary.BL.Services
@using SelfServiceLibrary.BL.DTO.Issue
@using Microsoft.AspNetCore.Components.Authorization
@inject IssueService issueService
@inject AuthenticationStateProvider AuthenticationStateProvider

<Bar Breakpoint="Breakpoint.Desktop"
     Background="Background.Light"
     ThemeContrast="ThemeContrast.Light">
    <BarBrand>
        My Issues
    </BarBrand>
    <BarToggler />
    <BarMenu>
        <BarStart>
            <BarItem>
                <Buttons>
                    <Button Color="Color.Info">All</Button>
                    <Button Color="Color.Primary">Active</Button>
                    <Button Color="Color.Success">Returned</Button>
                </Buttons>
            </BarItem>
            <BarItem>
                <Addons Margin="Margin.Is3.OnX.OnTablet">
                    <Addon AddonType="AddonType.Body">
                        <TextEdit Placeholder="Algebra..." />
                    </Addon>
                    <Addon AddonType="AddonType.End">
                        <Button Color="Color.Primary">Search</Button>
                    </Addon>
                </Addons>
            </BarItem>
        </BarStart>
    </BarMenu>
</Bar>

<Container Fluid="true">
    <DataGrid RowSelectable=@(_ => false)
              TItem="IssueListlDTO"
              Data="@issues"
              ShowPager="true"
              PagerPosition="DataGridPagerPosition.Top"
              PageSize="10">
        <DataGridColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.DepartmentNumber)" Caption="Ident" Sortable="false">
            <DisplayTemplate>
                <a href="@($"books/{context.DepartmentNumber}")">@context.DepartmentNumber</a>
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.BookName)" Caption="Ident" Sortable="true" Filterable="true" />
        <DataGridDateColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.IssueDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Issue date" Sortable="true" />
        <DataGridDateColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.ExpiryDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Expiry date" Sortable="true" />
        <DataGridDateColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.ReturnDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Return date" Sortable="true" />
        <DataGridCheckColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.IsReturned)" Caption="Reutrned" Sortable="true" Filterable="true">
            <DisplayTemplate>
                <Check TValue="bool" Checked="context.IsReturned" Disabled="true" ReadOnly="true" />
            </DisplayTemplate>
        </DataGridCheckColumn>
    </DataGrid>
</Container>

@code {
    private List<IssueListlDTO> issues;

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        issues = await issueService.GetAll(state.User.Identity.Name);
    }
}
