@page "/issues"
@using SelfServiceLibrary.Service.Services
@using SelfServiceLibrary.Service.DTO.Issue
@using System.IO
@inject IssueService issueService

<Bar Breakpoint="Breakpoint.Desktop"
     Background="Background.Light"
     ThemeContrast="ThemeContrast.Light">
    <BarBrand>
        All Issues
    </BarBrand>
    <BarToggler />
    <BarMenu>
        <BarStart>
            <BarItem>
                <Buttons>
                    <Button Color="Color.Info">All</Button>
                    <Button Color="Color.Primary">Active</Button>
                    <Button Color="Color.Success">Returned</Button>
                </Buttons>
            </BarItem>
            <BarItem>
                <Addons Margin="Margin.Is3.OnX.OnTablet">
                    <Addon AddonType="AddonType.Body">
                        <TextEdit Placeholder="Algebra..." />
                    </Addon>
                    <Addon AddonType="AddonType.End">
                        <Button Color="Color.Primary">Search</Button>
                    </Addon>
                </Addons>
            </BarItem>
        </BarStart>
    </BarMenu>
</Bar>

<DataGrid RowSelectable=@(_ => false)
          Margin="Margin.Is4.OnX"
          TItem="IssueListlDTO"
          Data="@issues"
          ReadData="@OnReadData"
          TotalItems="@totalIssues"
          ShowPager="true"
          PagerPosition="DataGridPagerPosition.Bottom"
          PageSize="15">
    <DataGridColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.BookName)" Caption="Name" Sortable="true" />
    <DataGridColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.IssuedTo)" Caption="User" Sortable="true" />
    <DataGridDateColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.IssueDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Issue date" Sortable="true" />
    <DataGridDateColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.ExpiryDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Expiry date" Sortable="true" />
    <DataGridDateColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.ReturnDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Return date" Sortable="true" />
    <DataGridCheckColumn TItem="IssueListlDTO" Field="@nameof(IssueListlDTO.IsReturned)" Caption="Reutrned" Sortable="true">
        <DisplayTemplate>
            <Check TValue="bool" Checked="context.IsReturned" Disabled="true" ReadOnly="true" />
        </DisplayTemplate>
    </DataGridCheckColumn>
</DataGrid>

@code {
    private List<IssueListlDTO> issues;
    private int? totalIssues;

    protected override async Task OnInitializedAsync()
    {
        totalIssues = (int)await issueService.GetTotalCount();
    }

    private async Task OnReadData(DataGridReadDataEventArgs<IssueListlDTO> e)
    {
        var sortings = e.Columns.Where(x => x.Direction != SortDirection.None).ToDictionary(x => x.Field, x => x.Direction);
        var searches = e.Columns.Where(x => !string.IsNullOrEmpty(x.SearchValue)).ToDictionary(x => x.Field, x => x.SearchValue);

        issues = await issueService.GetAll(e.Page, e.PageSize);
        StateHasChanged();
    }
}
